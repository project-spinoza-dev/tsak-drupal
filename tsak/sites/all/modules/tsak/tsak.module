<?php
/*
 * Implementation of hook_menu()
 */
function tsak_menu(){
  // path location (<a href="http://www.url.com/foo/bar" title="http://www.url.com/foo/bar">http://www.url.com/foo/bar</a> )
  
  $items['tsak'] = array(
    // page title
    'title' => 'TSAK',
    // describe the page for the menu system.  site visitors will not see this
    'description' => 'Simple custom hook_menu() implementation.',
    // function that is called when visiting the new path
    'page callback' => 'custom_form_function',
    // permissions required to view page
    'access arguments' => array('tsak permission'),
  ); 
  $items['savedtsakkeys'] = array(
    'title' => 'SavedTsakkeypage',
    'page callback' => 'saved_tsak_appkeys',//should use this function for call back
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK, 
  );
  $items['updatetsakkeys'] = array(
    'title' => 'updateTsakkeypage',
    'page callback' => 'update_tsak_appkeys',//should use this function for call back
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK, 
  );  
  return $items;
}
function tsak_permission() {
  return array(
    'tsak permission' => array(
      'title' => t('Administer tsak module'),
      'description' => t('Allow people to make use of my module.'),
    ),
  );
}
 
//function for saving tsak keys
function saved_tsak_appkeys(){
  //print "<pre>".print_r($_POST, true)."</pre>";
   
  if ($_SERVER['REQUEST_METHOD'] != 'POST')

    return false;

  $dbpuid = $_POST['puid'];
  $dbpconsumerKey = $_POST['pconsumerKey'];
  $dbpconsumerSecret = $_POST['pconsumerSecret'];
  $dbpaccessToken = $_POST['paccessToken'];
  $dbpaccessTokenSecret = $_POST['paccessTokenSecret'];
  define('DRUPAL_ROOT', getcwd());
  //$_SERVER['REMOTE_ADDR'] = "localhost"; // Necessary if running from command line
  require_once DRUPAL_ROOT . '/includes/bootstrap.inc';
  drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
  db_insert('tsakapp')
    ->fields(array(
      'tsakuid' => $dbpuid,
      'consumer_key' => $dbpconsumerKey,
      'consumer_key_secret' => $dbpconsumerSecret,
      'access_token' => $dbpaccessToken,
      'access_token_secret' => $dbpaccessTokenSecret
    ))
    ->execute();
   $response = array ('id' => 1, 'result' => "node saved", 'error' => NULL);
 
  header('content-type: text/javascript');
  echo json_encode($response);
  return true;

}

//update keys in database
function update_tsak_appkeys(){

  if ($_SERVER['REQUEST_METHOD'] != 'POST')

    return false;

  $dbupuid = $_POST['upuid'];
  $dbupconsumerKey = $_POST['upconsumerKey'];
  $dbupconsumerSecret = $_POST['upconsumerSecret'];
  $dbupaccessToken = $_POST['upaccessToken'];
  $dbupaccessTokenSecret = $_POST['upaccessTokenSecret'];
  define('DRUPAL_ROOT', getcwd());
  //$_SERVER['REMOTE_ADDR'] = "localhost"; // Necessary if running from command line
  require_once DRUPAL_ROOT . '/includes/bootstrap.inc';
  drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
  db_update('tsakapp')
    ->fields(array(
      'consumer_key' => $dbupconsumerKey,
      'consumer_key_secret' => $dbupconsumerSecret,
      'access_token' => $dbupaccessToken,
      'access_token_secret' => $dbupaccessTokenSecret
    ))
    ->condition('tsakuid', $dbupuid) 
    ->execute();
   $response = array ('id' => 1, 'result' => "node saved", 'error' => NULL);
 
  header('content-type: text/javascript');
  echo json_encode($response);
  return true;
}

/*
 * Returns custom content to Drupal
 */
function custom_form_function(){
  // Call theme() function, so that Drupal includes the custom_form-page.tpl.php template
  return theme('custom_form_template');
}
   
/*
 * Implementation of hook_theme().
 */
function tsak_theme(){
  return array(
    'custom_form_template' => array(
      // template file name will be custom-page.tpl.php
      'template' => 'tsak-form-page',
    ),
  );
}